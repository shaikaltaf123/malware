import ipaddress
import os
import socket
import struct
import sys
import threading
import time
SUBNET = '172.16.20.0/22'
host='172.16.23.139'
MESSAGE = 'PYTHONRULES!'
f=open("target.txt",'w+')
def IP(l):
    
    header = struct.unpack('<BBHHHBBH4s4s',l)
    ver = header[0] >> 4
    ihl = header[0] & 0xF
    tos = header[1]
    len = header[2]
    id = header[3]
    offset = header[4]
    ttl = header[5]
    protocol_num = header[6]
    sum = header[7]
    src = header[8]
    dst = header[9]
    src_address = ipaddress.ip_address(src)
    dst_address = ipaddress.ip_address(dst)
    protocol_map = {1:"ICMP", 6: "TCP", 17: "UDP"}
    try:
        protocol = protocol_map[protocol_num]
    except Exception as e:
        protocol = str(protocol_num)
    return ver,ihl,tos,len,id,offset,ttl,protocol,sum,src_address,dst_address
def icmp(buff):
    header = struct.unpack('<BBHHH', buff)
    type = header[0]
    code = header[1]
    sum = header[2]
    id = header[3]
    seq = header[4]
    return code,type

def udp_sender():
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as sender:
        for ip in ipaddress.ip_network(SUBNET).hosts():
            sender.sendto(bytes(MESSAGE, 'utf8'), (str(ip), 65212))
def main(host):
    
    if os.name == 'nt':
        socket_protocol = socket.IPPROTO_IP
    else:
        socket_protocol = socket.IPPROTO_ICMP
        socket_protocol1=socket.IPPROTO_IP
    sniffer = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket_protocol)
    sniffer.bind((host,0))
    sniffer.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)
    if os.name == 'nt':
        sniffer.ioctl(socket.SIO_RCVALL, socket.RCVALL_ON)
    t=threading.Thread(target=udp_sender)
    t.start()
    
    try:
        while True:
            l=sniffer.recvfrom(65565)[0]

            version,header,tservice,length,ids,offs,ttl,protocal,sum,src,dst=IP(l[0:20])
            
            
            if protocal=='ICMP':
                offset = header * 4
                buf = l[offset:offset + 8]
                code,type=icmp(buf)
                if code==3 and type ==3:
                    if ipaddress.ip_address(src) in ipaddress.IPv4Network(SUBNET):
                       i=len(l)-len(MESSAGE)
                       
                       m=bytes(MESSAGE,'utf-8')
                       if l[i:]==m:
                           target=str(src)
                           f.write(target+'\n')

                           if target!=host:
                               print("targets ip --> {}".format(target))



    except KeyboardInterrupt as e:
        if os.name == 'nt':
            sniffer.ioctl(socket.SIO_RCVALL, socket.RCVALL_OFF)
try:    
    SUBNET = input('ENTER SUBNET EX: 172.16.20.0/22')

    host=input("ENTER YOU IP")
    main(host)
except Exception as e:
    print(e)
    f.close()
    

